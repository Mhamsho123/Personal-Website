{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nimport { trigger, style, query, transition, stagger, animate } from '@angular/animations';\nimport { UntypedFormControl } from '@angular/forms';\nlet HeaderComponent = class HeaderComponent {\n  constructor(router, analyticsService, languageService) {\n    this.router = router;\n    this.analyticsService = analyticsService;\n    this.languageService = languageService;\n    this.responsiveMenuVisible = false;\n    this.languageFormControl = new UntypedFormControl();\n    this.cvName = \"\";\n  }\n  ngOnInit() {\n    this.languageFormControl.valueChanges.subscribe(val => this.languageService.changeLanguage(val));\n    this.languageFormControl.setValue(this.languageService.language);\n  }\n  scroll(el) {\n    if (document.getElementById(el)) {\n      document.getElementById(el).scrollIntoView({\n        behavior: 'smooth'\n      });\n    } else {\n      this.router.navigate(['/home']).then(() => document.getElementById(el).scrollIntoView({\n        behavior: 'smooth'\n      }));\n    }\n    this.responsiveMenuVisible = false;\n  }\n  downloadCV() {\n    this.languageService.translateService.get(\"Header.cvName\").subscribe(val => {\n      this.cvName = val;\n      console.log(val);\n      // app url\n      let url = window.location.href;\n      // Open a new window with the CV\n      window.open(url + \"/../assets/cv/\" + this.cvName, \"_blank\");\n    });\n  }\n  getScrollPosition(event) {\n    this.pageYPosition = window.pageYOffset;\n  }\n  changeLanguage(language) {\n    this.languageFormControl.setValue(language);\n  }\n};\n__decorate([HostListener('window:scroll', ['getScrollPosition($event)'])], HeaderComponent.prototype, \"getScrollPosition\", null);\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  animations: [trigger(\"animateMenu\", [transition(\":enter\", [query(\"*\", [style({\n    opacity: 0,\n    transform: \"translateY(-50%)\"\n  }), stagger(50, [animate(\"250ms cubic-bezier(0.35, 0, 0.25, 1)\", style({\n    opacity: 1,\n    transform: \"none\"\n  }))])])])])]\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","HostListener","trigger","style","query","transition","stagger","animate","UntypedFormControl","HeaderComponent","constructor","router","analyticsService","languageService","responsiveMenuVisible","languageFormControl","cvName","ngOnInit","valueChanges","subscribe","val","changeLanguage","setValue","language","scroll","el","document","getElementById","scrollIntoView","behavior","navigate","then","downloadCV","translateService","get","console","log","url","window","location","href","open","getScrollPosition","event","pageYPosition","pageYOffset","__decorate","selector","templateUrl","styleUrls","animations","opacity","transform"],"sources":["/Users/mohamadhamsho/Desktop/Personal-Website-main/src/app/components/general/header/header.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, HostListener, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {trigger, style, query, transition, stagger, animate } from '@angular/animations'\nimport { AnalyticsService } from 'src/app/services/analytics/analytics.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { LanguageService } from 'src/app/services/language/language.service';\nimport { ThisReceiver } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  animations:[\n    trigger(\"animateMenu\",[\n      transition(\":enter\",[\n        query(\"*\", [\n          style({opacity: 0, transform: \"translateY(-50%)\"}),\n          stagger(50,[\n            animate(\n              \"250ms cubic-bezier(0.35, 0, 0.25, 1)\",\n              style({opacity: 1, transform: \"none\"}))\n          ])\n        ])\n      ])\n    ])\n  ]\n})\n\n\n\nexport class HeaderComponent implements OnInit {\n\n  responsiveMenuVisible: Boolean = false;\n  pageYPosition: number;\n  languageFormControl: UntypedFormControl= new UntypedFormControl();\n  cvName: string = \"\";\n\n  constructor(\n    private router: Router,\n    public analyticsService: AnalyticsService,\n    public languageService: LanguageService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.languageFormControl.valueChanges.subscribe(val => this.languageService.changeLanguage(val))\n\n    this.languageFormControl.setValue(this.languageService.language)\n\n  }\n\n  scroll(el) {\n    if(document.getElementById(el)) {\n      document.getElementById(el).scrollIntoView({behavior: 'smooth'});\n    } else{\n      this.router.navigate(['/home']).then(()=> document.getElementById(el).scrollIntoView({behavior: 'smooth'}) );\n    }\n    this.responsiveMenuVisible=false;\n  }\n\n  downloadCV(){\n    this.languageService.translateService.get(\"Header.cvName\").subscribe(val => {\n      this.cvName = val\n      console.log(val)\n      // app url\n      let url = window.location.href;\n\n      // Open a new window with the CV\n       window.open(url + \"/../assets/cv/\" + this.cvName, \"_blank\");\n    })\n\n  }\n\n  @HostListener('window:scroll', ['getScrollPosition($event)'])\n    getScrollPosition(event) {\n        this.pageYPosition=window.pageYOffset\n    }\n\n    changeLanguage(language: string) {\n      this.languageFormControl.setValue(language);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}