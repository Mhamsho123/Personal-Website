{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-google-analytics\";\nexport class AnalyticsService {\n  constructor($gaService) {\n    this.$gaService = $gaService;\n  }\n  sendAnalyticEvent(action, category, label) {\n    this.$gaService.event(action, category, label);\n  }\n  sendAnalyticPageView(path, title) {\n    this.$gaService.pageView(path, title);\n  }\n  static #_ = this.ɵfac = function AnalyticsService_Factory(t) {\n    return new (t || AnalyticsService)(i0.ɵɵinject(i1.GoogleAnalyticsService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnalyticsService,\n    factory: AnalyticsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AnalyticsService","constructor","$gaService","sendAnalyticEvent","action","category","label","event","sendAnalyticPageView","path","title","pageView","_","i0","ɵɵinject","i1","GoogleAnalyticsService","_2","factory","ɵfac","providedIn"],"sources":["/Users/mohamadhamsho/Desktop/Personal-Website-main/src/app/services/analytics/analytics.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalyticsService {\n\n  constructor(\n    private $gaService: GoogleAnalyticsService\n  ) { }\n\n  sendAnalyticEvent(action: string, category: string, label){\n    this.$gaService.event(action, category, label)\n  }\n\n  sendAnalyticPageView(path: string, title: string){\n    this.$gaService.pageView(path, title)\n  }\n\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YACUC,UAAkC;IAAlC,KAAAA,UAAU,GAAVA,UAAU;EAChB;EAEJC,iBAAiBA,CAACC,MAAc,EAAEC,QAAgB,EAAEC,KAAK;IACvD,IAAI,CAACJ,UAAU,CAACK,KAAK,CAACH,MAAM,EAAEC,QAAQ,EAAEC,KAAK,CAAC;EAChD;EAEAE,oBAAoBA,CAACC,IAAY,EAAEC,KAAa;IAC9C,IAAI,CAACR,UAAU,CAACS,QAAQ,CAACF,IAAI,EAAEC,KAAK,CAAC;EACvC;EAAC,QAAAE,CAAA,G;qBAZUZ,gBAAgB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,sBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBjB,gBAAgB;IAAAkB,OAAA,EAAhBlB,gBAAgB,CAAAmB,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}